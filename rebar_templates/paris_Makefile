APPS    = apps
REBAR   = ./rebar
MAKE    = make
MKDIR_P = mkdir -p
RM_RF   = rm -rf

.PHONY: compile rel get-deps 

all: compile

compile: get-deps
	@$(REBAR) compile

get-deps:
	@$(REBAR) get-deps
	@$(REBAR) check-deps

clean:
	@$(REBAR) clean
	rm -f erl_crash.dump

realclean: clean
	@$(REBAR) delete-deps

test: compile
	@$(RM_RF) .test
	@$(MKDIR_P) .test
	@for test in $(wildcard test/*.erl); do \
		echo "Compile $${test}"; \
		erlc -v -o .test $${test}; \
	done;
	$(eval MODULES := $(shell find .test -type f -name \*.beam \
				| sed "s/.test\///;s/\.beam/ /" | sed '$$s/.$$//'))
	@for mod in $(MODULES); do \
		echo "Run test $${mod}"; \
		erl -pa .test \
						ebin \
						include \
						apps/*/ebin \
						apps/*/include \
						deps/*/ebin \
						deps/*/include \
						-config config/{{name}}.config \
						-noshell \
						-eval "eunit:test($${mod}, [verbose])" \
						-s init stop; \
	done

doc:
	$(REBAR) skip_deps=true doc
	for app in $(APPS); do \
		cp -R apps/$${app}/doc doc/$${app}; \
	done;

dev:
	@PARIS_RUN_MODE="production" $(MAKE) run-dev
	
run-dev:
	erl -pa ebin include apps/*/ebin apps/*/include deps/*/ebin deps/*/include -config config/{{name}}.config

analyze: checkplt
	@$(REBAR) skip_deps=true dialyze

buildplt:
	@$(REBAR) skip_deps=true build-plt

checkplt: buildplt
	@$(REBAR) skip_deps=true check-plt
