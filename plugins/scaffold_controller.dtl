-module({{ ctrl_name }}).

-export([
  get/1,
  get/2,
  get/3,
  post/1
  ]).

% GET /{{ ctrl_name }}
get(_Request) ->
  DB = paris:get(db),
  Datas = lists:map(fun(P) ->
          P:to_keylist()
      end, {{ model_name }}:find(DB, all, [])),
  paris_response:render_view({{ ctrl_name }}_index, [{ {{ model_name }}s, Datas}]).

% GET /{{ ctrl_name }}/new
get(_Request, "new") ->
  paris_response:render_view({{ ctrl_name }}_new);

% GET /{{ ctrl_name }}/1
get(_Request, ID) ->
  DB = paris:get(db),
  Data = {{ model_name }}:find(DB, first, [{where, [{id, ID}]}]),
  paris_response:render_view({{ ctrl_name }}_show, [{ {{ model_name }}, Data}]).

% GET /{{ ctrl_name }}/1/edit
get(_Request, ID, "edit") ->
  DB = paris:get(db),
  Data = {{ model_name }}:find(DB, first, [{where, [{id, ID}]}]),
  paris_response:render_view({{ ctrl_name }}_edit, [{ {{ model_name }}, Data}]);

% GET /{{ ctrl_name }}/1/delete
get(_Request, ID, "delete") ->
  DB = paris:get(db),
  case {{ model_name }}:find(DB, first, [{where, [{id, ID}]}]) of
    [] -> ok;
    Data -> Data:delete()
  end,
  paris_response:redirect("/{{ ctrl_name }}").

% POST /{{ ctrl_name }}
post(Request) ->
  DB = paris:get(db),{% for column in columns %}
  C{{ column.name }} = binary_to_list(paris_request:param(Request, <<"{{ column.name }}">>)),{% endfor %}
  Data1 = case paris_request:param(Request, <<"id">>) of
    undefined ->
      Data = {{ model_name }}:new(DB, [{% for column in columns %}{% if forloop.last %} 
            { {{ column.name }}, C{{ column.name }} }{% else %}
            { {{ column.name }}, C{{ column.name }} },{% endif %}{% endfor %}
            ]),
      Data:insert();
    ID -> 
      DataToUpdate = {{ model_name }}:find(DB, first, [{where, [{id, binary_to_integer(ID)}]}]),
      [UpdatedData|_] = DataToUpdate:update([{% for column in columns %}{% if forloop.last %}
            { {{ column.name }}, C{{ column.name }} }{% else %}
            { {{ column.name }}, C{{ column.name }} },{% endif %}{% endfor %}
            ]),
      UpdatedData
  end,
  paris_response:redirect("/{{ ctrl_name }}/~p", [Data1:id()]).

